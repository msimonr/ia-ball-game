{"version":3,"sources":["utilities.js","App.jsx","index.js"],"names":["drawRect","detections","ctx","circle","fillStyle","beginPath","arc","x","y","r","Math","PI","fill","forEach","prediction","width","height","text","score","floor","color","strokeStyle","font","scale","fillText","lineWidth","rect","stroke","colision","elem","rx","ry","rw","rh","testX","testY","sqrt","pow","drawLose","video","box","drawImage","choose","choices","random","length","toque","undefined","Control","state","speed","radio","reiniciar","setSpeed","e","setState","parseFloat","target","value","setRadio","className","type","min","id","defaultValue","this","onChange","onClick","React","Component","App","webcamRef","useRef","canvasRef","runCoco","a","cocossd","net","setInterval","detect","current","readyState","videoWidth","videoHeight","getContext","obj","arraySpeed","margen","dx","dy","useEffect","ref","muted","style","position","marginLeft","marginRight","left","right","textAlign","zindex","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.23c8d678.chunk.js","sourcesContent":["export const drawRect = (detections, ctx, circle) => {\r\n\r\n    ctx.fillStyle = '#FF000080';\r\n    ctx.beginPath();\r\n    ctx.arc(circle.x, circle.y, circle.r, 0, 2 * Math.PI, 0);\r\n    ctx.fill();\r\n\r\n    detections.forEach(prediction => {\r\n        //resultados predicciones\r\n        const [x, y, width, height] = prediction['bbox'];\r\n        const text = prediction['class'];\r\n        const score = Math.floor(prediction['score'] * 100);\r\n\r\n        //estilo cuadrado\r\n        let color = 'green';\r\n        if (text !== 'person') {\r\n            color = 'gray';\r\n        }\r\n        ctx.strokeStyle = color;\r\n        ctx.font = '18px Arial';\r\n        ctx.fillStyle = color;\r\n\r\n        //dibujar\r\n        ctx.beginPath();\r\n        ctx.scale(-1, 1);\r\n        ctx.fillText(text + ' ' + score + '%', -width - x, y);\r\n        ctx.scale(-1, 1);\r\n        ctx.lineWidth = 3;\r\n        ctx.rect(x, y, width, height);\r\n        ctx.stroke();\r\n    });\r\n}\r\n\r\nexport const colision = (detections, circle) => {\r\n    for (let elem of detections) {\r\n        if (elem['class'] === 'person' && elem['score'] > 0.5) {\r\n            let rx = elem['bbox'][0];\r\n            let ry = elem['bbox'][1];\r\n            let rw = elem['bbox'][2];\r\n            let rh = elem['bbox'][3];\r\n            let testX = circle.x;\r\n            let testY = circle.y;\r\n\r\n            if (circle.x < rx) {\r\n                testX = rx;\r\n                // console.log('cerca de izquierda');\r\n            } // test left edge\r\n            else if (circle.x > rx + rw) {\r\n                testX = rx + rw;\r\n                // console.log('cerca de derecha');\r\n            } // right edge\r\n            if (circle.y < ry) {\r\n                testY = ry;\r\n                // console.log('cerca de arriba');\r\n            } // top edge\r\n            else if (circle.y > ry + rh) {\r\n                testY = ry + rh;\r\n                //console.log('cerca de abajo');\r\n            } // bottom edge\r\n\r\n            let distance = Math.sqrt(Math.pow((circle.x - testX), 2) + Math.pow((circle.y - testY), 2));\r\n            //console.log('Distance:',distance, 'radio:', circle.r);\r\n            if (distance + circle.r * 0.7 < circle.r) {\r\n                return elem;\r\n            }\r\n        }\r\n    }\r\n    return undefined;\r\n}\r\n\r\nexport const drawLose = (video, box, ctx, circle) => {\r\n    ctx.drawImage(video, 0, 0);\r\n    const [x, y, width, height] = box['bbox'];\r\n    //estilo cuadrado\r\n    const color = 'red';\r\n    ctx.strokeStyle = color;\r\n    ctx.font = '30px bold Arial';\r\n    ctx.fillStyle = color;\r\n    //dibujar\r\n    ctx.beginPath();\r\n    ctx.scale(-1, 1);\r\n    ctx.fillText('Â¡Toque!', -x - width, y - 5);\r\n    ctx.scale(-1, 1);\r\n    ctx.lineWidth = 3;\r\n    ctx.rect(x, y, width, height);\r\n    ctx.stroke();\r\n\r\n    ctx.fillStyle = '#FF000080';\r\n    ctx.beginPath();\r\n    ctx.arc(circle.x, circle.y, circle.r, 0, 2 * Math.PI, 0);\r\n    ctx.fill();\r\n\r\n}\r\n\r\nexport const choose = (choices) => {\r\n    var index = Math.floor(Math.random() * choices.length);\r\n    return choices[index];\r\n}","import React, { useRef, useState, useEffect } from \"react\";\r\nimport * as tf from \"@tensorflow/tfjs\";\r\nimport * as cocossd from \"@tensorflow-models/coco-ssd\"\r\nimport Webcam from \"react-webcam\";\r\nimport \"./App.css\";\r\nimport { drawRect, colision, drawLose, choose} from \"./utilities\";\r\n\r\n//Game variables\r\nvar toque = undefined;\r\nvar id = undefined;\r\nvar circle = {'x': -100, 'y':-100, 'r':50, 'dx':1, 'dy':1, 'speed':20};\r\n\r\nclass Control extends React.Component{\r\n\r\n  state = {\r\n    speed: 20,\r\n    radio: 50\r\n  }\r\n\r\n  reiniciar = () =>{\r\n    if(toque !== undefined){\r\n      circle.x = -100;\r\n      circle.y = -100;\r\n      circle.r = this.state.radio;\r\n      circle.speed = this.state.speed;\r\n      toque = undefined;     \r\n    }\r\n  }\r\n\r\n  setSpeed = (e) =>{\r\n    this.setState({speed: parseFloat(e.target.value)});\r\n  }\r\n\r\n  setRadio = (e) =>{\r\n    this.setState({radio: parseFloat(e.target.value)});\r\n  }\r\n\r\n  render(){\r\n    return(\r\n      <div className=\"Control\">\r\n        <label>Velocidad de bola</label>\r\n        <input type=\"number\" min='1' id=\"speed\" defaultValue={this.state.speed} onChange={this.setSpeed}/>\r\n        <label>Radio de bola</label>\r\n        <input type=\"number\" min='10' id=\"radio\" defaultValue={this.state.radio} onChange={this.setRadio}/>\r\n        <button onClick={this.reiniciar}>Reiniciar</button>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\n\r\n\r\nfunction App() {\r\n  const webcamRef = useRef(null);\r\n  const canvasRef = useRef(null);\r\n\r\n  // Main function\r\n  const runCoco = async () => {\r\n    // 3. TODO - Load network \r\n    // e.g. const net = await cocossd.load();\r\n    const net = await cocossd.load();\r\n    //  Loop and detect hands\r\n     id = setInterval(() => {\r\n      detect(net);\r\n    }, 10);\r\n  };\r\n\r\n  const detect = async (net) => {\r\n    // Check data is available\r\n    if(toque !== undefined){\r\n\r\n    }else{\r\n    if (\r\n      typeof webcamRef.current !== \"undefined\" &&\r\n      webcamRef.current !== null &&\r\n      webcamRef.current.video.readyState === 4\r\n    ) {\r\n      // Get Video Properties\r\n      const video = webcamRef.current.video;\r\n      const videoWidth = webcamRef.current.video.videoWidth;\r\n      const videoHeight = webcamRef.current.video.videoHeight;\r\n\r\n      // Set video width\r\n      webcamRef.current.video.width = videoWidth;\r\n      webcamRef.current.video.height = videoHeight;\r\n\r\n      // Set canvas height and width\r\n      canvasRef.current.width = videoWidth;\r\n      canvasRef.current.height = videoHeight;\r\n\r\n      // 4. TODO - Make Detections\r\n      // e.g. const obj = await net.detect(video);\r\n      \r\n      // Draw mesh\r\n      const ctx = canvasRef.current.getContext(\"2d\");\r\n\r\n      const obj = await net.detect(video);\r\n      \r\n      //console.log(obj);\r\n\r\n      //COLISION\r\n\r\n      toque = colision(obj, circle);\r\n\r\n      if (toque !== undefined){\r\n        //Hubo colision, se debe mostrar la captura y quedarse ahi.\r\n        drawLose(video, toque, ctx, circle);\r\n      }else{\r\n      // --------- MOVIMIENTO CIRCULO EN PANTALLA ---------------\r\n      \r\n      let arraySpeed = [0.95,1.05, 1];\r\n      \r\n      let margen = circle.r * 0.2;\r\n      //Direccion horizontal:\r\n      if(circle.x + circle.r > canvasRef.current.width + margen){\r\n        circle.dx = choose(arraySpeed)*-1;\r\n      }else if(circle.x - circle.r < -margen){\r\n        circle.dx = choose(arraySpeed);\r\n      }\r\n\r\n      //Direccion vertical:\r\n      if(circle.y + circle.r > canvasRef.current.height + margen){\r\n        circle.dy = choose(arraySpeed)*-1;\r\n      }else if(circle.y - circle.r < -margen){\r\n        circle.dy = choose(arraySpeed);\r\n      }\r\n\r\n      //Actualizar posicion circulo\r\n      circle.x = circle.x + circle.dx*circle.speed;\r\n      circle.y = circle.y + circle.dy*circle.speed;\r\n\r\n\r\n\r\n      // 5. TODO - Update drawing utility\r\n      drawRect(obj, ctx, circle);\r\n    }\r\n    }\r\n  }\r\n\r\n  };\r\n\r\n  useEffect(()=>{runCoco()},[]);\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <Control/>\r\n      <header className=\"App-header\">\r\n        <Webcam\r\n          ref={webcamRef}\r\n          muted={true} \r\n          style={{\r\n            position: \"absolute\",\r\n            marginLeft: \"auto\",\r\n            marginRight: \"auto\",\r\n            left: 0,\r\n            right: 0,\r\n            textAlign: \"center\",\r\n            zindex: 9,\r\n            width: 640,\r\n            height: 480,\r\n          }}\r\n        />\r\n\r\n        <canvas\r\n          ref={canvasRef}\r\n          style={{\r\n            position: \"absolute\",\r\n            marginLeft: \"auto\",\r\n            marginRight: \"auto\",\r\n            left: 0,\r\n            right: 0,\r\n            textAlign: \"center\",\r\n            zindex: 8,\r\n            width: 640,\r\n            height: 480,\r\n          }}\r\n        />\r\n      </header>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);"],"sourceRoot":""}